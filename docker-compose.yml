version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: manna-postgres
    environment:
      POSTGRES_DB: manna_dev
      POSTGRES_USER: manna
      POSTGRES_PASSWORD: manna
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U manna -d manna_dev']
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: manna-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: manna-backend
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://manna:manna@postgres:5432/manna_dev
      - REDIS_URL=redis://redis:6379/0
    ports:
      - '8000:8000'
    volumes:
      - ./packages/backend:/app
      - ./data:/app/data
      - ./reports:/app/reports
      - ./tools:/app/tools
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    container_name: manna-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - '3000:3000'
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
