// Simple toast hook - in a real app you'd use a toast library like sonner or react-hot-toast\nimport { useCallback } from 'react'\n\nexport interface Toast {\n  title: string\n  description?: string\n  variant?: 'default' | 'destructive' | 'success'\n  duration?: number\n}\n\n// Simple toast implementation - replace with a proper toast library\nexport function toast({ title, description, variant = 'default', duration = 3000 }: Toast) {\n  // Create a simple toast element\n  const toastElement = document.createElement('div')\n  toastElement.className = `fixed top-4 right-4 z-50 p-4 rounded-md shadow-lg max-w-sm ${\n    variant === 'destructive' \n      ? 'bg-error-600 text-white'\n      : variant === 'success'\n      ? 'bg-success-600 text-white' \n      : 'bg-white border text-gray-900'\n  }`\n  \n  toastElement.innerHTML = `\n    <div class=\"flex items-start space-x-2\">\n      <div class=\"flex-1\">\n        <div class=\"font-medium\">${title}</div>\n        ${description ? `<div class=\"text-sm mt-1 opacity-90\">${description}</div>` : ''}\n      </div>\n      <button class=\"text-current opacity-70 hover:opacity-100 ml-2\" onclick=\"this.parentElement.parentElement.remove()\">\n        <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path>\n        </svg>\n      </button>\n    </div>\n  `\n  \n  document.body.appendChild(toastElement)\n  \n  // Auto-remove after duration\n  setTimeout(() => {\n    if (toastElement.parentNode) {\n      toastElement.remove()\n    }\n  }, duration)\n}\n\n// Hook version for convenience\nexport function useToast() {\n  return useCallback(toast, [])\n}"