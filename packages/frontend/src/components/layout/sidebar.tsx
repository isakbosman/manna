'use client'\n\nimport React from 'react'\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { cn } from '@/lib/utils'\nimport { \n  LayoutDashboard,\n  CreditCard,\n  Building2,\n  FileText,\n  Settings,\n  PieChart,\n  TrendingUp,\n  Wallet,\n  Receipt,\n  Calculator,\n  X\n} from 'lucide-react'\nimport { Button } from '@/components/ui/button'\n\ninterface SidebarProps {\n  isOpen?: boolean\n  onClose?: () => void\n  className?: string\n}\n\nconst navigation = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: LayoutDashboard,\n    description: 'Overview and key metrics'\n  },\n  {\n    name: 'Transactions',\n    href: '/transactions',\n    icon: Receipt,\n    description: 'View and manage transactions'\n  },\n  {\n    name: 'Accounts',\n    href: '/accounts',\n    icon: Building2,\n    description: 'Bank and credit accounts'\n  },\n  {\n    name: 'Categories',\n    href: '/categories',\n    icon: Calculator,\n    description: 'Transaction categorization'\n  },\n  {\n    name: 'Reports',\n    href: '/reports',\n    icon: FileText,\n    description: 'Financial reports and analysis',\n    subItems: [\n      {\n        name: 'P&L Statement',\n        href: '/reports/pl',\n        icon: TrendingUp\n      },\n      {\n        name: 'Balance Sheet',\n        href: '/reports/balance-sheet',\n        icon: PieChart\n      },\n      {\n        name: 'Cash Flow',\n        href: '/reports/cash-flow',\n        icon: Wallet\n      }\n    ]\n  },\n  {\n    name: 'Plaid Integration',\n    href: '/plaid',\n    icon: CreditCard,\n    description: 'Connect bank accounts'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings'\n  }\n]\n\nexport function Sidebar({ isOpen = true, onClose, className }: SidebarProps) {\n  const pathname = usePathname()\n  const [expandedItems, setExpandedItems] = React.useState<string[]>(['Reports'])\n\n  const toggleExpanded = (name: string) => {\n    setExpandedItems(prev => \n      prev.includes(name) \n        ? prev.filter(item => item !== name)\n        : [...prev, name]\n    )\n  }\n\n  const isActive = (href: string) => {\n    if (href === '/dashboard') {\n      return pathname === href\n    }\n    return pathname.startsWith(href)\n  }\n\n  return (\n    <>\n      {/* Mobile overlay */}\n      {isOpen && (\n        <div \n          className=\"fixed inset-0 z-40 bg-black/50 md:hidden\" \n          onClick={onClose}\n        />\n      )}\n      \n      {/* Sidebar */}\n      <aside \n        className={cn(\n          'fixed top-0 left-0 z-50 h-full w-64 transform border-r bg-background transition-transform duration-200 ease-in-out md:relative md:translate-x-0',\n          isOpen ? 'translate-x-0' : '-translate-x-full',\n          className\n        )}\n      >\n        {/* Mobile close button */}\n        <div className=\"flex h-14 items-center justify-between border-b px-4 md:hidden\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-8 w-8 rounded bg-primary-600 flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">M</span>\n            </div>\n            <span className=\"font-bold\">Manna Financial</span>\n          </div>\n          <Button variant=\"ghost\" size=\"icon\" onClick={onClose}>\n            <X className=\"h-5 w-5\" />\n          </Button>\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 space-y-1 p-4\">\n          {navigation.map((item) => {\n            const isItemActive = isActive(item.href)\n            const isExpanded = expandedItems.includes(item.name)\n            const hasSubItems = item.subItems && item.subItems.length > 0\n\n            return (\n              <div key={item.name}>\n                {hasSubItems ? (\n                  <button\n                    onClick={() => toggleExpanded(item.name)}\n                    className={cn(\n                      'flex w-full items-center justify-between rounded-md px-3 py-2 text-sm font-medium transition-colors',\n                      isItemActive\n                        ? 'bg-primary-100 text-primary-700'\n                        : 'text-neutral-600 hover:bg-neutral-50 hover:text-neutral-900'\n                    )}\n                  >\n                    <div className=\"flex items-center\">\n                      <item.icon className=\"mr-3 h-5 w-5\" />\n                      {item.name}\n                    </div>\n                    <svg\n                      className={cn(\n                        'h-4 w-4 transition-transform',\n                        isExpanded ? 'rotate-90' : ''\n                      )}\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 5l7 7-7 7\"\n                      />\n                    </svg>\n                  </button>\n                ) : (\n                  <Link\n                    href={item.href}\n                    onClick={() => onClose?.()}\n                    className={cn(\n                      'flex items-center rounded-md px-3 py-2 text-sm font-medium transition-colors',\n                      isItemActive\n                        ? 'bg-primary-100 text-primary-700'\n                        : 'text-neutral-600 hover:bg-neutral-50 hover:text-neutral-900'\n                    )}\n                  >\n                    <item.icon className=\"mr-3 h-5 w-5\" />\n                    {item.name}\n                  </Link>\n                )}\n\n                {/* Sub-items */}\n                {hasSubItems && isExpanded && (\n                  <div className=\"ml-6 mt-1 space-y-1\">\n                    {item.subItems!.map((subItem) => {\n                      const isSubItemActive = isActive(subItem.href)\n                      return (\n                        <Link\n                          key={subItem.name}\n                          href={subItem.href}\n                          onClick={() => onClose?.()}\n                          className={cn(\n                            'flex items-center rounded-md px-3 py-2 text-sm transition-colors',\n                            isSubItemActive\n                              ? 'bg-primary-50 text-primary-600 font-medium'\n                              : 'text-neutral-500 hover:bg-neutral-50 hover:text-neutral-700'\n                          )}\n                        >\n                          <subItem.icon className=\"mr-3 h-4 w-4\" />\n                          {subItem.name}\n                        </Link>\n                      )\n                    })}\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </nav>\n\n        {/* Footer */}\n        <div className=\"border-t p-4\">\n          <div className=\"text-xs text-muted-foreground\">\n            <p>Manna Financial Platform</p>\n            <p>Version 1.0.0</p>\n          </div>\n        </div>\n      </aside>\n    </>\n  )\n}"